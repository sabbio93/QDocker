/**
 * generated by Xtext 2.10.0
 */
package xtext.qactor.generator;

import com.google.common.collect.Iterators;
import java.util.Iterator;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.InputOutput;
import xtext.qactor.generator.GenDocker;
import xtext.qactor.generator.GenUtils;
import xtext.qactor.qADocker.QActorSystemSpec;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class QADockerGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    InputOutput.<String>println("generazione Docker iniziata");
    GenUtils.setFsa(fsa);
    CharSequence _readTextFile = fsa.readTextFile((GenUtils.rootDir + ".project"));
    final String pr = _readTextFile.toString();
    final int i = pr.indexOf("<name>");
    final int f = pr.indexOf("</name>");
    final String nome = pr.substring((i + 6), f);
    TreeIterator<EObject> _allContents = resource.getAllContents();
    final Iterator<QActorSystemSpec> iter = Iterators.<QActorSystemSpec>filter(_allContents, QActorSystemSpec.class);
    while (iter.hasNext()) {
      {
        final QActorSystemSpec sis = iter.next();
        GenDocker _genDocker = new GenDocker();
        _genDocker.doGenerate(sis, nome);
        String _name = sis.getName();
        String _plus = ("Docker generati per " + _name);
        InputOutput.<String>println(_plus);
      }
    }
    URI _uRI = fsa.getURI(".");
    String _fileString = _uRI.toFileString();
    String _plus = ("Docker salvati in " + _fileString);
    InputOutput.<String>println(_plus);
  }
}
