/**
 * generated by Xtext 2.10.0
 */
package xtext.qactor.qADocker;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Context</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link xtext.qactor.qADocker.Context#getName <em>Name</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.Context#getIp <em>Ip</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.Context#isEnv <em>Env</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.Context#getColor <em>Color</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.Context#isStandalone <em>Standalone</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.Context#isHttpserver <em>Httpserver</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.Context#getHandler <em>Handler</em>}</li>
 * </ul>
 *
 * @see xtext.qactor.qADocker.QADockerPackage#getContext()
 * @model
 * @generated
 */
public interface Context extends EObject
{
  /**
   * Returns the value of the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Name</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Name</em>' attribute.
   * @see #setName(String)
   * @see xtext.qactor.qADocker.QADockerPackage#getContext_Name()
   * @model
   * @generated
   */
  String getName();

  /**
   * Sets the value of the '{@link xtext.qactor.qADocker.Context#getName <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Name</em>' attribute.
   * @see #getName()
   * @generated
   */
  void setName(String value);

  /**
   * Returns the value of the '<em><b>Ip</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Ip</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Ip</em>' containment reference.
   * @see #setIp(ComponentIP)
   * @see xtext.qactor.qADocker.QADockerPackage#getContext_Ip()
   * @model containment="true"
   * @generated
   */
  ComponentIP getIp();

  /**
   * Sets the value of the '{@link xtext.qactor.qADocker.Context#getIp <em>Ip</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Ip</em>' containment reference.
   * @see #getIp()
   * @generated
   */
  void setIp(ComponentIP value);

  /**
   * Returns the value of the '<em><b>Env</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Env</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Env</em>' attribute.
   * @see #setEnv(boolean)
   * @see xtext.qactor.qADocker.QADockerPackage#getContext_Env()
   * @model
   * @generated
   */
  boolean isEnv();

  /**
   * Sets the value of the '{@link xtext.qactor.qADocker.Context#isEnv <em>Env</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Env</em>' attribute.
   * @see #isEnv()
   * @generated
   */
  void setEnv(boolean value);

  /**
   * Returns the value of the '<em><b>Color</b></em>' attribute.
   * The literals are from the enumeration {@link xtext.qactor.qADocker.WindowColor}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Color</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Color</em>' attribute.
   * @see xtext.qactor.qADocker.WindowColor
   * @see #setColor(WindowColor)
   * @see xtext.qactor.qADocker.QADockerPackage#getContext_Color()
   * @model
   * @generated
   */
  WindowColor getColor();

  /**
   * Sets the value of the '{@link xtext.qactor.qADocker.Context#getColor <em>Color</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Color</em>' attribute.
   * @see xtext.qactor.qADocker.WindowColor
   * @see #getColor()
   * @generated
   */
  void setColor(WindowColor value);

  /**
   * Returns the value of the '<em><b>Standalone</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Standalone</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Standalone</em>' attribute.
   * @see #setStandalone(boolean)
   * @see xtext.qactor.qADocker.QADockerPackage#getContext_Standalone()
   * @model
   * @generated
   */
  boolean isStandalone();

  /**
   * Sets the value of the '{@link xtext.qactor.qADocker.Context#isStandalone <em>Standalone</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Standalone</em>' attribute.
   * @see #isStandalone()
   * @generated
   */
  void setStandalone(boolean value);

  /**
   * Returns the value of the '<em><b>Httpserver</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Httpserver</em>' attribute isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Httpserver</em>' attribute.
   * @see #setHttpserver(boolean)
   * @see xtext.qactor.qADocker.QADockerPackage#getContext_Httpserver()
   * @model
   * @generated
   */
  boolean isHttpserver();

  /**
   * Sets the value of the '{@link xtext.qactor.qADocker.Context#isHttpserver <em>Httpserver</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Httpserver</em>' attribute.
   * @see #isHttpserver()
   * @generated
   */
  void setHttpserver(boolean value);

  /**
   * Returns the value of the '<em><b>Handler</b></em>' containment reference list.
   * The list contents are of type {@link xtext.qactor.qADocker.EventHandler}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Handler</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Handler</em>' containment reference list.
   * @see xtext.qactor.qADocker.QADockerPackage#getContext_Handler()
   * @model containment="true"
   * @generated
   */
  EList<EventHandler> getHandler();

} // Context
