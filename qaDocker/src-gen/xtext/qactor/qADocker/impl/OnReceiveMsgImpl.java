/**
 * generated by Xtext 2.10.0
 */
package xtext.qactor.qADocker.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import xtext.qactor.qADocker.OnReceiveMsg;
import xtext.qactor.qADocker.PHead;
import xtext.qactor.qADocker.QADockerPackage;
import xtext.qactor.qADocker.TimeLimit;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>On Receive Msg</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.qactor.qADocker.impl.OnReceiveMsgImpl#getMsgid <em>Msgid</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.impl.OnReceiveMsgImpl#getMsgtype <em>Msgtype</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.impl.OnReceiveMsgImpl#getMsgsender <em>Msgsender</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.impl.OnReceiveMsgImpl#getMsgreceiver <em>Msgreceiver</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.impl.OnReceiveMsgImpl#getMsgcontent <em>Msgcontent</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.impl.OnReceiveMsgImpl#getMsgseqnum <em>Msgseqnum</em>}</li>
 *   <li>{@link xtext.qactor.qADocker.impl.OnReceiveMsgImpl#getDuration <em>Duration</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OnReceiveMsgImpl extends MessageMoveImpl implements OnReceiveMsg
{
  /**
   * The cached value of the '{@link #getMsgid() <em>Msgid</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgid()
   * @generated
   * @ordered
   */
  protected PHead msgid;

  /**
   * The cached value of the '{@link #getMsgtype() <em>Msgtype</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgtype()
   * @generated
   * @ordered
   */
  protected PHead msgtype;

  /**
   * The cached value of the '{@link #getMsgsender() <em>Msgsender</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgsender()
   * @generated
   * @ordered
   */
  protected PHead msgsender;

  /**
   * The cached value of the '{@link #getMsgreceiver() <em>Msgreceiver</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgreceiver()
   * @generated
   * @ordered
   */
  protected PHead msgreceiver;

  /**
   * The cached value of the '{@link #getMsgcontent() <em>Msgcontent</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgcontent()
   * @generated
   * @ordered
   */
  protected PHead msgcontent;

  /**
   * The cached value of the '{@link #getMsgseqnum() <em>Msgseqnum</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMsgseqnum()
   * @generated
   * @ordered
   */
  protected PHead msgseqnum;

  /**
   * The cached value of the '{@link #getDuration() <em>Duration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected TimeLimit duration;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OnReceiveMsgImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QADockerPackage.Literals.ON_RECEIVE_MSG;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PHead getMsgid()
  {
    return msgid;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMsgid(PHead newMsgid, NotificationChain msgs)
  {
    PHead oldMsgid = msgid;
    msgid = newMsgid;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGID, oldMsgid, newMsgid);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMsgid(PHead newMsgid)
  {
    if (newMsgid != msgid)
    {
      NotificationChain msgs = null;
      if (msgid != null)
        msgs = ((InternalEObject)msgid).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGID, null, msgs);
      if (newMsgid != null)
        msgs = ((InternalEObject)newMsgid).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGID, null, msgs);
      msgs = basicSetMsgid(newMsgid, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGID, newMsgid, newMsgid));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PHead getMsgtype()
  {
    return msgtype;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMsgtype(PHead newMsgtype, NotificationChain msgs)
  {
    PHead oldMsgtype = msgtype;
    msgtype = newMsgtype;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGTYPE, oldMsgtype, newMsgtype);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMsgtype(PHead newMsgtype)
  {
    if (newMsgtype != msgtype)
    {
      NotificationChain msgs = null;
      if (msgtype != null)
        msgs = ((InternalEObject)msgtype).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGTYPE, null, msgs);
      if (newMsgtype != null)
        msgs = ((InternalEObject)newMsgtype).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGTYPE, null, msgs);
      msgs = basicSetMsgtype(newMsgtype, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGTYPE, newMsgtype, newMsgtype));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PHead getMsgsender()
  {
    return msgsender;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMsgsender(PHead newMsgsender, NotificationChain msgs)
  {
    PHead oldMsgsender = msgsender;
    msgsender = newMsgsender;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGSENDER, oldMsgsender, newMsgsender);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMsgsender(PHead newMsgsender)
  {
    if (newMsgsender != msgsender)
    {
      NotificationChain msgs = null;
      if (msgsender != null)
        msgs = ((InternalEObject)msgsender).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGSENDER, null, msgs);
      if (newMsgsender != null)
        msgs = ((InternalEObject)newMsgsender).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGSENDER, null, msgs);
      msgs = basicSetMsgsender(newMsgsender, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGSENDER, newMsgsender, newMsgsender));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PHead getMsgreceiver()
  {
    return msgreceiver;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMsgreceiver(PHead newMsgreceiver, NotificationChain msgs)
  {
    PHead oldMsgreceiver = msgreceiver;
    msgreceiver = newMsgreceiver;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER, oldMsgreceiver, newMsgreceiver);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMsgreceiver(PHead newMsgreceiver)
  {
    if (newMsgreceiver != msgreceiver)
    {
      NotificationChain msgs = null;
      if (msgreceiver != null)
        msgs = ((InternalEObject)msgreceiver).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER, null, msgs);
      if (newMsgreceiver != null)
        msgs = ((InternalEObject)newMsgreceiver).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER, null, msgs);
      msgs = basicSetMsgreceiver(newMsgreceiver, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER, newMsgreceiver, newMsgreceiver));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PHead getMsgcontent()
  {
    return msgcontent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMsgcontent(PHead newMsgcontent, NotificationChain msgs)
  {
    PHead oldMsgcontent = msgcontent;
    msgcontent = newMsgcontent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT, oldMsgcontent, newMsgcontent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMsgcontent(PHead newMsgcontent)
  {
    if (newMsgcontent != msgcontent)
    {
      NotificationChain msgs = null;
      if (msgcontent != null)
        msgs = ((InternalEObject)msgcontent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT, null, msgs);
      if (newMsgcontent != null)
        msgs = ((InternalEObject)newMsgcontent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT, null, msgs);
      msgs = basicSetMsgcontent(newMsgcontent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT, newMsgcontent, newMsgcontent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PHead getMsgseqnum()
  {
    return msgseqnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMsgseqnum(PHead newMsgseqnum, NotificationChain msgs)
  {
    PHead oldMsgseqnum = msgseqnum;
    msgseqnum = newMsgseqnum;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM, oldMsgseqnum, newMsgseqnum);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMsgseqnum(PHead newMsgseqnum)
  {
    if (newMsgseqnum != msgseqnum)
    {
      NotificationChain msgs = null;
      if (msgseqnum != null)
        msgs = ((InternalEObject)msgseqnum).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM, null, msgs);
      if (newMsgseqnum != null)
        msgs = ((InternalEObject)newMsgseqnum).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM, null, msgs);
      msgs = basicSetMsgseqnum(newMsgseqnum, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM, newMsgseqnum, newMsgseqnum));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TimeLimit getDuration()
  {
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDuration(TimeLimit newDuration, NotificationChain msgs)
  {
    TimeLimit oldDuration = duration;
    duration = newDuration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__DURATION, oldDuration, newDuration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDuration(TimeLimit newDuration)
  {
    if (newDuration != duration)
    {
      NotificationChain msgs = null;
      if (duration != null)
        msgs = ((InternalEObject)duration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__DURATION, null, msgs);
      if (newDuration != null)
        msgs = ((InternalEObject)newDuration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QADockerPackage.ON_RECEIVE_MSG__DURATION, null, msgs);
      msgs = basicSetDuration(newDuration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QADockerPackage.ON_RECEIVE_MSG__DURATION, newDuration, newDuration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QADockerPackage.ON_RECEIVE_MSG__MSGID:
        return basicSetMsgid(null, msgs);
      case QADockerPackage.ON_RECEIVE_MSG__MSGTYPE:
        return basicSetMsgtype(null, msgs);
      case QADockerPackage.ON_RECEIVE_MSG__MSGSENDER:
        return basicSetMsgsender(null, msgs);
      case QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER:
        return basicSetMsgreceiver(null, msgs);
      case QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT:
        return basicSetMsgcontent(null, msgs);
      case QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM:
        return basicSetMsgseqnum(null, msgs);
      case QADockerPackage.ON_RECEIVE_MSG__DURATION:
        return basicSetDuration(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QADockerPackage.ON_RECEIVE_MSG__MSGID:
        return getMsgid();
      case QADockerPackage.ON_RECEIVE_MSG__MSGTYPE:
        return getMsgtype();
      case QADockerPackage.ON_RECEIVE_MSG__MSGSENDER:
        return getMsgsender();
      case QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER:
        return getMsgreceiver();
      case QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT:
        return getMsgcontent();
      case QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM:
        return getMsgseqnum();
      case QADockerPackage.ON_RECEIVE_MSG__DURATION:
        return getDuration();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QADockerPackage.ON_RECEIVE_MSG__MSGID:
        setMsgid((PHead)newValue);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGTYPE:
        setMsgtype((PHead)newValue);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGSENDER:
        setMsgsender((PHead)newValue);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER:
        setMsgreceiver((PHead)newValue);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT:
        setMsgcontent((PHead)newValue);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM:
        setMsgseqnum((PHead)newValue);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__DURATION:
        setDuration((TimeLimit)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QADockerPackage.ON_RECEIVE_MSG__MSGID:
        setMsgid((PHead)null);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGTYPE:
        setMsgtype((PHead)null);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGSENDER:
        setMsgsender((PHead)null);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER:
        setMsgreceiver((PHead)null);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT:
        setMsgcontent((PHead)null);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM:
        setMsgseqnum((PHead)null);
        return;
      case QADockerPackage.ON_RECEIVE_MSG__DURATION:
        setDuration((TimeLimit)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QADockerPackage.ON_RECEIVE_MSG__MSGID:
        return msgid != null;
      case QADockerPackage.ON_RECEIVE_MSG__MSGTYPE:
        return msgtype != null;
      case QADockerPackage.ON_RECEIVE_MSG__MSGSENDER:
        return msgsender != null;
      case QADockerPackage.ON_RECEIVE_MSG__MSGRECEIVER:
        return msgreceiver != null;
      case QADockerPackage.ON_RECEIVE_MSG__MSGCONTENT:
        return msgcontent != null;
      case QADockerPackage.ON_RECEIVE_MSG__MSGSEQNUM:
        return msgseqnum != null;
      case QADockerPackage.ON_RECEIVE_MSG__DURATION:
        return duration != null;
    }
    return super.eIsSet(featureID);
  }

} //OnReceiveMsgImpl
