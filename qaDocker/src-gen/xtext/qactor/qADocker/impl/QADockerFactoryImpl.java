/**
 * generated by Xtext 2.10.0
 */
package xtext.qactor.qADocker.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EDataType;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import xtext.qactor.qADocker.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class QADockerFactoryImpl extends EFactoryImpl implements QADockerFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static QADockerFactory init()
  {
    try
    {
      QADockerFactory theQADockerFactory = (QADockerFactory)EPackage.Registry.INSTANCE.getEFactory(QADockerPackage.eNS_URI);
      if (theQADockerFactory != null)
      {
        return theQADockerFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new QADockerFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QADockerFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case QADockerPackage.QACTOR_SYSTEM: return createQActorSystem();
      case QADockerPackage.QACTOR_SYSTEM_SPEC: return createQActorSystemSpec();
      case QADockerPackage.ROBOT: return createRobot();
      case QADockerPackage.MESSAGE: return createMessage();
      case QADockerPackage.OUT_ONLY_MESSAGE: return createOutOnlyMessage();
      case QADockerPackage.OUT_IN_MESSAGE: return createOutInMessage();
      case QADockerPackage.EVENT: return createEvent();
      case QADockerPackage.SIGNAL: return createSignal();
      case QADockerPackage.TOKEN: return createToken();
      case QADockerPackage.DISPATCH: return createDispatch();
      case QADockerPackage.REQUEST: return createRequest();
      case QADockerPackage.INVITATION: return createInvitation();
      case QADockerPackage.CONTEXT: return createContext();
      case QADockerPackage.QACTOR: return createQActor();
      case QADockerPackage.RULE: return createRule();
      case QADockerPackage.PHEAD: return createPHead();
      case QADockerPackage.PTERM: return createPTerm();
      case QADockerPackage.PATOM: return createPAtom();
      case QADockerPackage.PATOM_STRING: return createPAtomString();
      case QADockerPackage.PATOMIC: return createPAtomic();
      case QADockerPackage.PATOM_NUM: return createPAtomNum();
      case QADockerPackage.PSTRUCT: return createPStruct();
      case QADockerPackage.PACTOR_CALL: return createPActorCall();
      case QADockerPackage.PPREDEF: return createPPredef();
      case QADockerPackage.PIS: return createPIs();
      case QADockerPackage.PATOM_CUT: return createPAtomCut();
      case QADockerPackage.DATA: return createData();
      case QADockerPackage.INTEGER_DATA: return createIntegerData();
      case QADockerPackage.STRING_DATA: return createStringData();
      case QADockerPackage.ACTION: return createAction();
      case QADockerPackage.PLAN: return createPlan();
      case QADockerPackage.PLAN_ACTION: return createPlanAction();
      case QADockerPackage.GUARD: return createGuard();
      case QADockerPackage.GUARD_PREDICATE: return createGuardPredicate();
      case QADockerPackage.GUARD_PREDICATE_REMOVABLE: return createGuardPredicateRemovable();
      case QADockerPackage.GUARD_PREDICATE_STABLE: return createGuardPredicateStable();
      case QADockerPackage.MOVE: return createMove();
      case QADockerPackage.ACTION_MOVE: return createActionMove();
      case QADockerPackage.EXECUTE_ACTION: return createExecuteAction();
      case QADockerPackage.SOLVE_GOAL: return createSolveGoal();
      case QADockerPackage.DEMO: return createDemo();
      case QADockerPackage.ACTOR_OP: return createActorOp();
      case QADockerPackage.BASIC_ROBOT_MOVE: return createBasicRobotMove();
      case QADockerPackage.BASIC_MOVE: return createBasicMove();
      case QADockerPackage.PRINT: return createPrint();
      case QADockerPackage.PRINT_CURRENT_EVENT: return createPrintCurrentEvent();
      case QADockerPackage.PRINT_CURRENT_MESSAGE: return createPrintCurrentMessage();
      case QADockerPackage.MEMO_CURRENT_EVENT: return createMemoCurrentEvent();
      case QADockerPackage.MEMO_CURRENT_MESSAGE: return createMemoCurrentMessage();
      case QADockerPackage.PLAN_MOVE: return createPlanMove();
      case QADockerPackage.GET_ACTIVATION_EVENT: return createGetActivationEvent();
      case QADockerPackage.GET_SENSED_EVENT: return createGetSensedEvent();
      case QADockerPackage.LOAD_PLAN: return createLoadPlan();
      case QADockerPackage.RUN_PLAN: return createRunPlan();
      case QADockerPackage.RESUME_PLAN: return createResumePlan();
      case QADockerPackage.SUSPEND_PLAN: return createSuspendPlan();
      case QADockerPackage.REPEAT_PLAN: return createRepeatPlan();
      case QADockerPackage.SWITCH_PLAN: return createSwitchPlan();
      case QADockerPackage.END_PLAN: return createEndPlan();
      case QADockerPackage.END_ACTOR: return createEndActor();
      case QADockerPackage.GUARD_MOVE: return createGuardMove();
      case QADockerPackage.ADD_RULE: return createAddRule();
      case QADockerPackage.REMOVE_RULE: return createRemoveRule();
      case QADockerPackage.MESSAGE_MOVE: return createMessageMove();
      case QADockerPackage.SEND_DISPATCH: return createSendDispatch();
      case QADockerPackage.SEND_REQUEST: return createSendRequest();
      case QADockerPackage.REPLY_TO_CALLER: return createReplyToCaller();
      case QADockerPackage.RECEIVE_MSG: return createReceiveMsg();
      case QADockerPackage.MSG_SPEC: return createMsgSpec();
      case QADockerPackage.ON_RECEIVE_MSG: return createOnReceiveMsg();
      case QADockerPackage.MSG_SELECT: return createMsgSelect();
      case QADockerPackage.RAISE_EVENT: return createRaiseEvent();
      case QADockerPackage.SENSE_EVENT: return createSenseEvent();
      case QADockerPackage.MSG_SWITCH: return createMsgSwitch();
      case QADockerPackage.EVENT_SWITCH: return createEventSwitch();
      case QADockerPackage.CONTINUATION: return createContinuation();
      case QADockerPackage.EXTENSION_MOVE: return createExtensionMove();
      case QADockerPackage.PHOTO: return createPhoto();
      case QADockerPackage.SOUND: return createSound();
      case QADockerPackage.VIDEO: return createVideo();
      case QADockerPackage.DELAY: return createDelay();
      case QADockerPackage.ANSWER_EVENT: return createAnswerEvent();
      case QADockerPackage.EVENT_HANDLER: return createEventHandler();
      case QADockerPackage.EVENT_HANDLER_BODY: return createEventHandlerBody();
      case QADockerPackage.EVENT_HANDLER_OPERATION: return createEventHandlerOperation();
      case QADockerPackage.MEMO_OPERATION: return createMemoOperation();
      case QADockerPackage.SOLVE_OPERATION: return createSolveOperation();
      case QADockerPackage.SEND_EVENT_AS_DISPATCH: return createSendEventAsDispatch();
      case QADockerPackage.MEMO_RULE: return createMemoRule();
      case QADockerPackage.MEMO_EVENT: return createMemoEvent();
      case QADockerPackage.REACTION: return createReaction();
      case QADockerPackage.ALARM_EVENT: return createAlarmEvent();
      case QADockerPackage.NORMAL_EVENT: return createNormalEvent();
      case QADockerPackage.CONTINUE_EVENT: return createContinueEvent();
      case QADockerPackage.VAR_OR_QACTOR: return createVarOrQactor();
      case QADockerPackage.VAR_OR_INT: return createVarOrInt();
      case QADockerPackage.VAR_OR_ATOMIC: return createVarOrAtomic();
      case QADockerPackage.VAR_OR_STRING: return createVarOrString();
      case QADockerPackage.VAR_OR_PSTRUCT: return createVarOrPStruct();
      case QADockerPackage.VAR_OR_PHEAD: return createVarOrPhead();
      case QADockerPackage.VAR_OR_ATOM_OR_PSTRUCT: return createVarOrAtomOrPStruct();
      case QADockerPackage.VARIABLE: return createVariable();
      case QADockerPackage.TIME_LIMIT: return createTimeLimit();
      case QADockerPackage.COMPONENT_IP: return createComponentIP();
      case QADockerPackage.MOVE_FILE: return createMoveFile();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object createFromString(EDataType eDataType, String initialValue)
  {
    switch (eDataType.getClassifierID())
    {
      case QADockerPackage.WINDOW_COLOR:
        return createWindowColorFromString(eDataType, initialValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String convertToString(EDataType eDataType, Object instanceValue)
  {
    switch (eDataType.getClassifierID())
    {
      case QADockerPackage.WINDOW_COLOR:
        return convertWindowColorToString(eDataType, instanceValue);
      default:
        throw new IllegalArgumentException("The datatype '" + eDataType.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QActorSystem createQActorSystem()
  {
    QActorSystemImpl qActorSystem = new QActorSystemImpl();
    return qActorSystem;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QActorSystemSpec createQActorSystemSpec()
  {
    QActorSystemSpecImpl qActorSystemSpec = new QActorSystemSpecImpl();
    return qActorSystemSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Robot createRobot()
  {
    RobotImpl robot = new RobotImpl();
    return robot;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Message createMessage()
  {
    MessageImpl message = new MessageImpl();
    return message;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutOnlyMessage createOutOnlyMessage()
  {
    OutOnlyMessageImpl outOnlyMessage = new OutOnlyMessageImpl();
    return outOnlyMessage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OutInMessage createOutInMessage()
  {
    OutInMessageImpl outInMessage = new OutInMessageImpl();
    return outInMessage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Event createEvent()
  {
    EventImpl event = new EventImpl();
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Signal createSignal()
  {
    SignalImpl signal = new SignalImpl();
    return signal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Token createToken()
  {
    TokenImpl token = new TokenImpl();
    return token;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Dispatch createDispatch()
  {
    DispatchImpl dispatch = new DispatchImpl();
    return dispatch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Request createRequest()
  {
    RequestImpl request = new RequestImpl();
    return request;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Invitation createInvitation()
  {
    InvitationImpl invitation = new InvitationImpl();
    return invitation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Context createContext()
  {
    ContextImpl context = new ContextImpl();
    return context;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QActor createQActor()
  {
    QActorImpl qActor = new QActorImpl();
    return qActor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Rule createRule()
  {
    RuleImpl rule = new RuleImpl();
    return rule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PHead createPHead()
  {
    PHeadImpl pHead = new PHeadImpl();
    return pHead;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PTerm createPTerm()
  {
    PTermImpl pTerm = new PTermImpl();
    return pTerm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PAtom createPAtom()
  {
    PAtomImpl pAtom = new PAtomImpl();
    return pAtom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PAtomString createPAtomString()
  {
    PAtomStringImpl pAtomString = new PAtomStringImpl();
    return pAtomString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PAtomic createPAtomic()
  {
    PAtomicImpl pAtomic = new PAtomicImpl();
    return pAtomic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PAtomNum createPAtomNum()
  {
    PAtomNumImpl pAtomNum = new PAtomNumImpl();
    return pAtomNum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PStruct createPStruct()
  {
    PStructImpl pStruct = new PStructImpl();
    return pStruct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PActorCall createPActorCall()
  {
    PActorCallImpl pActorCall = new PActorCallImpl();
    return pActorCall;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PPredef createPPredef()
  {
    PPredefImpl pPredef = new PPredefImpl();
    return pPredef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PIs createPIs()
  {
    PIsImpl pIs = new PIsImpl();
    return pIs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PAtomCut createPAtomCut()
  {
    PAtomCutImpl pAtomCut = new PAtomCutImpl();
    return pAtomCut;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Data createData()
  {
    DataImpl data = new DataImpl();
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntegerData createIntegerData()
  {
    IntegerDataImpl integerData = new IntegerDataImpl();
    return integerData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringData createStringData()
  {
    StringDataImpl stringData = new StringDataImpl();
    return stringData;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Action createAction()
  {
    ActionImpl action = new ActionImpl();
    return action;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Plan createPlan()
  {
    PlanImpl plan = new PlanImpl();
    return plan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PlanAction createPlanAction()
  {
    PlanActionImpl planAction = new PlanActionImpl();
    return planAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Guard createGuard()
  {
    GuardImpl guard = new GuardImpl();
    return guard;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GuardPredicate createGuardPredicate()
  {
    GuardPredicateImpl guardPredicate = new GuardPredicateImpl();
    return guardPredicate;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GuardPredicateRemovable createGuardPredicateRemovable()
  {
    GuardPredicateRemovableImpl guardPredicateRemovable = new GuardPredicateRemovableImpl();
    return guardPredicateRemovable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GuardPredicateStable createGuardPredicateStable()
  {
    GuardPredicateStableImpl guardPredicateStable = new GuardPredicateStableImpl();
    return guardPredicateStable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Move createMove()
  {
    MoveImpl move = new MoveImpl();
    return move;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ActionMove createActionMove()
  {
    ActionMoveImpl actionMove = new ActionMoveImpl();
    return actionMove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExecuteAction createExecuteAction()
  {
    ExecuteActionImpl executeAction = new ExecuteActionImpl();
    return executeAction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SolveGoal createSolveGoal()
  {
    SolveGoalImpl solveGoal = new SolveGoalImpl();
    return solveGoal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Demo createDemo()
  {
    DemoImpl demo = new DemoImpl();
    return demo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ActorOp createActorOp()
  {
    ActorOpImpl actorOp = new ActorOpImpl();
    return actorOp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicRobotMove createBasicRobotMove()
  {
    BasicRobotMoveImpl basicRobotMove = new BasicRobotMoveImpl();
    return basicRobotMove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BasicMove createBasicMove()
  {
    BasicMoveImpl basicMove = new BasicMoveImpl();
    return basicMove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Print createPrint()
  {
    PrintImpl print = new PrintImpl();
    return print;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrintCurrentEvent createPrintCurrentEvent()
  {
    PrintCurrentEventImpl printCurrentEvent = new PrintCurrentEventImpl();
    return printCurrentEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PrintCurrentMessage createPrintCurrentMessage()
  {
    PrintCurrentMessageImpl printCurrentMessage = new PrintCurrentMessageImpl();
    return printCurrentMessage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MemoCurrentEvent createMemoCurrentEvent()
  {
    MemoCurrentEventImpl memoCurrentEvent = new MemoCurrentEventImpl();
    return memoCurrentEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MemoCurrentMessage createMemoCurrentMessage()
  {
    MemoCurrentMessageImpl memoCurrentMessage = new MemoCurrentMessageImpl();
    return memoCurrentMessage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PlanMove createPlanMove()
  {
    PlanMoveImpl planMove = new PlanMoveImpl();
    return planMove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GetActivationEvent createGetActivationEvent()
  {
    GetActivationEventImpl getActivationEvent = new GetActivationEventImpl();
    return getActivationEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GetSensedEvent createGetSensedEvent()
  {
    GetSensedEventImpl getSensedEvent = new GetSensedEventImpl();
    return getSensedEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LoadPlan createLoadPlan()
  {
    LoadPlanImpl loadPlan = new LoadPlanImpl();
    return loadPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RunPlan createRunPlan()
  {
    RunPlanImpl runPlan = new RunPlanImpl();
    return runPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ResumePlan createResumePlan()
  {
    ResumePlanImpl resumePlan = new ResumePlanImpl();
    return resumePlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SuspendPlan createSuspendPlan()
  {
    SuspendPlanImpl suspendPlan = new SuspendPlanImpl();
    return suspendPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RepeatPlan createRepeatPlan()
  {
    RepeatPlanImpl repeatPlan = new RepeatPlanImpl();
    return repeatPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SwitchPlan createSwitchPlan()
  {
    SwitchPlanImpl switchPlan = new SwitchPlanImpl();
    return switchPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EndPlan createEndPlan()
  {
    EndPlanImpl endPlan = new EndPlanImpl();
    return endPlan;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EndActor createEndActor()
  {
    EndActorImpl endActor = new EndActorImpl();
    return endActor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GuardMove createGuardMove()
  {
    GuardMoveImpl guardMove = new GuardMoveImpl();
    return guardMove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AddRule createAddRule()
  {
    AddRuleImpl addRule = new AddRuleImpl();
    return addRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RemoveRule createRemoveRule()
  {
    RemoveRuleImpl removeRule = new RemoveRuleImpl();
    return removeRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MessageMove createMessageMove()
  {
    MessageMoveImpl messageMove = new MessageMoveImpl();
    return messageMove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SendDispatch createSendDispatch()
  {
    SendDispatchImpl sendDispatch = new SendDispatchImpl();
    return sendDispatch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SendRequest createSendRequest()
  {
    SendRequestImpl sendRequest = new SendRequestImpl();
    return sendRequest;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReplyToCaller createReplyToCaller()
  {
    ReplyToCallerImpl replyToCaller = new ReplyToCallerImpl();
    return replyToCaller;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReceiveMsg createReceiveMsg()
  {
    ReceiveMsgImpl receiveMsg = new ReceiveMsgImpl();
    return receiveMsg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MsgSpec createMsgSpec()
  {
    MsgSpecImpl msgSpec = new MsgSpecImpl();
    return msgSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OnReceiveMsg createOnReceiveMsg()
  {
    OnReceiveMsgImpl onReceiveMsg = new OnReceiveMsgImpl();
    return onReceiveMsg;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MsgSelect createMsgSelect()
  {
    MsgSelectImpl msgSelect = new MsgSelectImpl();
    return msgSelect;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RaiseEvent createRaiseEvent()
  {
    RaiseEventImpl raiseEvent = new RaiseEventImpl();
    return raiseEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SenseEvent createSenseEvent()
  {
    SenseEventImpl senseEvent = new SenseEventImpl();
    return senseEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MsgSwitch createMsgSwitch()
  {
    MsgSwitchImpl msgSwitch = new MsgSwitchImpl();
    return msgSwitch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EventSwitch createEventSwitch()
  {
    EventSwitchImpl eventSwitch = new EventSwitchImpl();
    return eventSwitch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Continuation createContinuation()
  {
    ContinuationImpl continuation = new ContinuationImpl();
    return continuation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ExtensionMove createExtensionMove()
  {
    ExtensionMoveImpl extensionMove = new ExtensionMoveImpl();
    return extensionMove;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Photo createPhoto()
  {
    PhotoImpl photo = new PhotoImpl();
    return photo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Sound createSound()
  {
    SoundImpl sound = new SoundImpl();
    return sound;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Video createVideo()
  {
    VideoImpl video = new VideoImpl();
    return video;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Delay createDelay()
  {
    DelayImpl delay = new DelayImpl();
    return delay;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AnswerEvent createAnswerEvent()
  {
    AnswerEventImpl answerEvent = new AnswerEventImpl();
    return answerEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EventHandler createEventHandler()
  {
    EventHandlerImpl eventHandler = new EventHandlerImpl();
    return eventHandler;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EventHandlerBody createEventHandlerBody()
  {
    EventHandlerBodyImpl eventHandlerBody = new EventHandlerBodyImpl();
    return eventHandlerBody;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EventHandlerOperation createEventHandlerOperation()
  {
    EventHandlerOperationImpl eventHandlerOperation = new EventHandlerOperationImpl();
    return eventHandlerOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MemoOperation createMemoOperation()
  {
    MemoOperationImpl memoOperation = new MemoOperationImpl();
    return memoOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SolveOperation createSolveOperation()
  {
    SolveOperationImpl solveOperation = new SolveOperationImpl();
    return solveOperation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SendEventAsDispatch createSendEventAsDispatch()
  {
    SendEventAsDispatchImpl sendEventAsDispatch = new SendEventAsDispatchImpl();
    return sendEventAsDispatch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MemoRule createMemoRule()
  {
    MemoRuleImpl memoRule = new MemoRuleImpl();
    return memoRule;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MemoEvent createMemoEvent()
  {
    MemoEventImpl memoEvent = new MemoEventImpl();
    return memoEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Reaction createReaction()
  {
    ReactionImpl reaction = new ReactionImpl();
    return reaction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AlarmEvent createAlarmEvent()
  {
    AlarmEventImpl alarmEvent = new AlarmEventImpl();
    return alarmEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NormalEvent createNormalEvent()
  {
    NormalEventImpl normalEvent = new NormalEventImpl();
    return normalEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ContinueEvent createContinueEvent()
  {
    ContinueEventImpl continueEvent = new ContinueEventImpl();
    return continueEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarOrQactor createVarOrQactor()
  {
    VarOrQactorImpl varOrQactor = new VarOrQactorImpl();
    return varOrQactor;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarOrInt createVarOrInt()
  {
    VarOrIntImpl varOrInt = new VarOrIntImpl();
    return varOrInt;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarOrAtomic createVarOrAtomic()
  {
    VarOrAtomicImpl varOrAtomic = new VarOrAtomicImpl();
    return varOrAtomic;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarOrString createVarOrString()
  {
    VarOrStringImpl varOrString = new VarOrStringImpl();
    return varOrString;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarOrPStruct createVarOrPStruct()
  {
    VarOrPStructImpl varOrPStruct = new VarOrPStructImpl();
    return varOrPStruct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarOrPhead createVarOrPhead()
  {
    VarOrPheadImpl varOrPhead = new VarOrPheadImpl();
    return varOrPhead;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarOrAtomOrPStruct createVarOrAtomOrPStruct()
  {
    VarOrAtomOrPStructImpl varOrAtomOrPStruct = new VarOrAtomOrPStructImpl();
    return varOrAtomOrPStruct;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Variable createVariable()
  {
    VariableImpl variable = new VariableImpl();
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TimeLimit createTimeLimit()
  {
    TimeLimitImpl timeLimit = new TimeLimitImpl();
    return timeLimit;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ComponentIP createComponentIP()
  {
    ComponentIPImpl componentIP = new ComponentIPImpl();
    return componentIP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MoveFile createMoveFile()
  {
    MoveFileImpl moveFile = new MoveFileImpl();
    return moveFile;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public WindowColor createWindowColorFromString(EDataType eDataType, String initialValue)
  {
    WindowColor result = WindowColor.get(initialValue);
    if (result == null) throw new IllegalArgumentException("The value '" + initialValue + "' is not a valid enumerator of '" + eDataType.getName() + "'");
    return result;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String convertWindowColorToString(EDataType eDataType, Object instanceValue)
  {
    return instanceValue == null ? null : instanceValue.toString();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public QADockerPackage getQADockerPackage()
  {
    return (QADockerPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static QADockerPackage getPackage()
  {
    return QADockerPackage.eINSTANCE;
  }

} //QADockerFactoryImpl
